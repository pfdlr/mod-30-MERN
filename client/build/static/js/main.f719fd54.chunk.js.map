{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/pages/NotFound/NotFoundPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","startRequest","type","START_REQUEST","endRequest","END_REQUEST","errorRequest","error","ERROR_REQUEST","resetRequest","RESET_REQUEST","loadPostsByPage","payload","LOAD_POSTS_PAGE","LOAD_POSTS","LOAD_SINGLE_POST","initialState","data","pending","success","singlePost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","nextPage","pages","prevPage","onClick","Array","el","page","Posts","loadPostsPage","pagination","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","counter","loadPosts","PostsPage","ContactPage","SinglePost","loadPost","appId","href","ownProps","postId","SinglePostPage","SinglePostContainer","match","params","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","PostFormContainer","NotFoundPage","App","exact","component","Home","Contact","AddPost","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f719fd54.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageContainer.scss';\r\n\r\nconst PageContainer = ({ children }) => (\r\n  <div className=\"container-fluid\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo'\r\nimport MainMenu from '../../layout/MainMenu/MainMenu'\r\nimport './NavBar.scss'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/contact', title: 'Contact' },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n\r\n    return (\r\n      <nav className='navbar'>\r\n      <Logo />\r\n      <MainMenu links={links} />\r\n    </nav>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageTitle.scss';\r\n\r\nconst PageTitle = ({ children }) => (\r\n  <h1 className=\"page-title\">\r\n     {children}\r\n  </h1>\r\n);\r\n\r\nPageTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;\r\n","export const API_URL = '/api';\r\nexport const BASE_URL = 'http://localhost:8000';","import axios from 'axios';\r\nimport { BASE_URL, API_URL } from '../config';\r\n\r\n/* SELECTORS */\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCounter = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const presentPage = ({ posts }) => posts.presentPage;\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST });\r\nexport const resetRequest = () => ({type: RESET_REQUEST});\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* ACTIONS */\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  singlePost: [],\r\n  amount: 0,\r\n  postsPerPage: 3,\r\n  presentPage: 1,\r\n};\r\n\r\n\r\n/* THUNKS */\r\n/* load all posts */\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n\r\n    try {\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n/* load single post */\r\nexport const loadSinglePostRequest = (id) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n\r\n    try {\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n  };\r\n};\r\n//add post\r\nexport const addPostRequest = (post) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      // eslint-disable-next-line\r\n      let res = await axios.post(`${BASE_URL}${API_URL}/posts`, post);\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n     \r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\r\n      \r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\n\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case START_REQUEST:\r\n      return { ...statePart, request: { pending: true, error: null, success: null } };\r\n    case END_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: true } };\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n    case RESET_REQUEST:\r\n      return {...statePart, request: { pending: false, error: null, success: null } };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts],\r\n        }; \r\n    default:\r\n      return statePart;\r\n  }\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SmallTitle.scss';\r\n\r\nconst SmallTitle = ({ children, ...otherProps }) => (\r\n  <h2 {...otherProps} className=\"small-title\">\r\n    { children }\r\n  </h2>\r\n);\r\n\r\nSmallTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SmallTitle;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <p {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/common/HtmlBox/HtmlBox';\r\nimport './PostSummary.scss';\r\nimport cutText from '../../../utils/cutText'\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 50)}</HtmlBox>\r\n    <Button variant=\"primary\">\r\n        <Link to={`/posts/${id}`}>Read more</Link>\r\n     </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n    if(content.length < 1) return 'Error';\r\n    if(content.length <= maxLength) return content;\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n  };","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => (\r\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </Animated>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n    state = {\r\n        presentPage: this.props.initialPage || 1\r\n    }\r\n\r\n    changePage = (newPage) => {\r\n        const { onPageChange } = this.props;\r\n\r\n        this.setState({ presentPage: newPage });\r\n        onPageChange(newPage);\r\n    }\r\n\r\n    nextPage = () => {\r\n        const { pages } = this.props;\r\n        const { presentPage } = this.state;\r\n        const { changePage } = this;\r\n        if (presentPage < pages)\r\n            changePage(presentPage + 1)\r\n    }\r\n\r\n    prevPage = () => {\r\n        const { presentPage } = this.state;\r\n        const { changePage } = this;\r\n        if (presentPage > 1)\r\n            changePage(presentPage - 1)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { pages } = this.props;\r\n        const { presentPage } = this.state;\r\n        const { changePage } = this;\r\n\r\n        return (\r\n            <div className=\"pagination\">\r\n                <ul className=\"pagination__list\">\r\n\r\n                    {presentPage > 1 ? (\r\n                        <li\r\n                            className={`pagination__list__item${(true) ? ' pagination__list__item--active' : ''}`}\r\n                            onClick={this.prevPage}>\r\n                            &lt;\r\n            </li>) : ''}\r\n                \r\n                    {[...Array(pages)].map((el, page) =>\r\n                                <li\r\n                                    key={++page}\r\n                                    onClick={() => { changePage(page) }}\r\n                                    className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n                                    {page}\r\n                                </li>\r\n                            )}\r\n\r\n                            {presentPage === pages ? '' : (\r\n                                <li\r\n                                    className={`pagination__list__item${(true) ? ' pagination__list__item--active' : ''}`}\r\n                                    onClick={this.nextPage}>\r\n                                    &gt;\r\n          \t</li>)}\r\n\r\n                </ul>\r\n            </div>\r\n                );\r\n            }\r\n        \r\n        }\r\n        \r\nPagination.propTypes = {\r\n                    pages: PropTypes.number.isRequired,\r\n                initialPage: PropTypes.number,\r\n                onPageChange: PropTypes.func.isRequired,\r\n            };\r\n            \r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage, postsPerPage);\r\n  }\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, pages, presentPage, pagination } = this.props;\r\n    const { loadPostsPage } = this;\r\n\r\n    if (request.pending === false && request.success === true && posts.length > 0 && pagination === true)\r\n      return (\r\n        <div>\r\n          <PostsList posts={posts} />\r\n          <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} />\r\n        </div>\r\n      );\r\n    else if (request.pending === false && request.success === true && posts.length > 0 && pagination !== true)\r\n      return (\r\n        <div>\r\n          <PostsList posts={posts} />\r\n        </div>\r\n      );\r\n    else if (request.pending === true || request.success === null)\r\n      return (\r\n        <Spinner />\r\n      )\r\n    else if (request.pending === false && request.error !== null)\r\n      return (\r\n        <Alert variant='error'> {request.error} </Alert>\r\n      )\r\n    else if (request.pending === false && request.success === true && posts.length === 0)\r\n      return (\r\n        <Alert variant='info'> No posts </Alert>\r\n      )\r\n  }\r\n\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 2,\r\n  postsPerPage: 4,\r\n  pagination: true,\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages, presentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: presentPage(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n  <PageTitle>Blog</PageTitle>\r\n  <Posts postsPerPage={3} pagination={false} />\r\n</div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { counter } = this.props;\r\n\r\n    return (\r\n        <div>\r\n            {counter > 0 ? 'Posts amount: ' + counter : 'No posts'}\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nPostsCounter.propTypes = {\r\n  counter: PropTypes.number,\r\n};\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPostsCounter, loadPostsRequest } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  counter: getPostsCounter(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPosts: () => dispatch(loadPostsRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsCounter);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Contact</PageTitle>\r\n    <p>Your Favourite Blooger Ltd.<br/>\r\n    9432 Division Street<br/>\r\n    Stone Mountain, GA 30083</p>\r\n    <p>Mobile Number: 207-914-3411</p>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { PropTypes } from 'prop-types';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport HtmlBox from '../../common/common/HtmlBox/HtmlBox';\r\nimport { BASE_URL } from '../../../config.js'\r\n\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadPost, resetRequest } = this.props;\r\n    loadPost();\r\n    resetRequest();\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, location } = this.props;\r\n\r\n    if (request.pending === false && request.success === true && posts.length > 0)\r\n      return (\r\n        <div>\r\n          <PageTitle>{posts[0].title}</PageTitle>\r\n          <p>Author: {posts[0].author}</p>\r\n          <HtmlBox>{posts[0].content}</HtmlBox>\r\n          <FacebookProvider appId=\"757076174720337\">\r\n            <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n            <ShareButton href=\"http://www.facebook.com\">\r\n              Share\r\n            </ShareButton>\r\n          </FacebookProvider>\r\n        </div>\r\n      );\r\n    else if (request.pending === true || request.success === null)\r\n      return (\r\n        <Spinner />\r\n      )\r\n    else if (request.pending === false && request.error !== null)\r\n      return (\r\n        <Alert variant='error'> {request.error} </Alert>\r\n      )\r\n    else if (request.pending === false && request.success === true && posts.length === 0)\r\n      return (\r\n        <Alert variant='info'> No posts </Alert>\r\n      )\r\n\r\n  }\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props} />);","import { connect } from 'react-redux';\r\nimport { loadSinglePostRequest, getSinglePost, getRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getSinglePost(state),\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  loadPost: () => dispatch(loadSinglePostRequest(ownProps.postId)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\nimport SinglePostContainer from '../../features/SinglePost/SinglePostContainer'\r\n\r\nconst SinglePostPage = props => (\r\n  <div>\r\n    <SinglePostContainer  postId={props.match.params.id}/>\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value }})\r\n  }\r\n\r\n  handleEditor = (text) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text }})\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={addPost}>\r\n\r\n        <TextField\r\n          label=\"Title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n\r\n        <TextField\r\n          label=\"Author\"\r\n          value={post.author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n\r\n        <Button variant=\"primary\">Add post</Button>\r\n\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostFormContainer from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n  <div>\r\n    <PageTitle>Add post</PageTitle>\r\n    <PostFormContainer />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\n\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\r\nimport AddPost from './components/pages/AddPost/AddPostPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts\" exact component={Posts} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          <Route path=\"/posts/new\" exact component={AddPost} />\r\n          <Route path=\"/posts/:id\" exact component={SinglePost} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n          applyMiddleware(thunk),\r\n          window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n      )\r\n  );\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport App from './App';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst Root = () => (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}